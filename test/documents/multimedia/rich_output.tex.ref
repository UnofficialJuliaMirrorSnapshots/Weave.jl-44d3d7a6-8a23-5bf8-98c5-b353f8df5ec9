\begin{juliacode}
import Base
function Base.show(io::IO, m::MIME"text/html", x::Array)
    print(io, "<table>")
    for i in 1:size(x,1)
        print(io, "<tr>")
        [print(io, "<td>$r</td>") for r in x[i,:]]
        print(io, "</tr>")
    end
    print(io, "</table>")
end

#This isn't valid latex, doesn't matter for the test
function Base.show(io::IO, m::MIME"text/latex", x::Array)
    println(io, "\\begin{tabular}")
    for i in 1:size(x,1)
        [print(io, "$r & ") for r in x[i,:]]
        print(io, "\\\\")
        println(io, " \\hline")
    end
    print(io, "\\end{tabular")
end

#This isn't valid markdown, doesn't matter for the test
function Base.show(io::IO, m::MIME"text/markdown", x::Array)
    println(io, "-----")
    for i in 1:size(x,1)
        print(io, "| ")
        [print(io, "$r | ") for r in x[i,:]]
        println(io, "")
    end
    print(io, "-----")
end


x = [collect(1:3) collect(1:3)]
ca = collect('a':'d')
ca
\end{juliacode}

\begin{tabular}
a & \\ \hline
b & \\ \hline
c & \\ \hline
d & \\ \hline
\end{tabular

\begin{juliacode}
display(ca)
display(x)
\end{juliacode}

\begin{tabular}
a & \\ \hline
b & \\ \hline
c & \\ \hline
d & \\ \hline
\end{tabular
\begin{tabular}
1 & 1 & \\ \hline
2 & 2 & \\ \hline
3 & 3 & \\ \hline
\end{tabular

\begin{juliaterm}
julia> x
3Ã—2 Array{Int64,2}:
 1  1
 2  2
 3  3

julia> ca
4-element Array{Char,1}:
 'a'
 'b'
 'c'
 'd'

\end{juliaterm}

\begin{juliacode}
using Markdown
m = Markdown.parse("**Some Markdown**")
m
\end{juliacode}

\textbf{Some Markdown}


